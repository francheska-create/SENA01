@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<ControlAsistencia.Models.Programa>
@{
}

<style>
    th {
        cursor: pointer;
    }
</style>


<h1> Lista de Programa de Formacion  del SENA</h1>
<p>
    <a asp-action="Create" class="btn btn-primary btn-lg"><i class="fas fa-address-book"></i>&nbsp;Agregar programa</a>


</p>
<table class="table  table-striped table-hover table-primary" id="tabla" >
    <thead>
        <tr>
            <th> 
                @Html.DisplayNameFor(Model => Model.Nombre)
            </th>
            <th >
                @Html.DisplayNameFor(Model => Model.Version)
            </th>
            <th >

                @Html.DisplayNameFor(Model => Model.Codigo)
            </th>
            <th>
                Operaciones
            </th>
           
        </tr>
    </thead>


    <tbody>

        @foreach (var item in Model)
        {
            if (item.Estado == true)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(Modelitem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(Modelitem => item.Version)
                    </td>
                    <td>
                        @Html.DisplayFor(Modelitem => item.Codigo)
                    </td>

                    <td>
                        <a asp-action="Edit" class="btn btn-success" asp-route-id="@item.ProgramaId"><i class="far fa-edit"></i>&nbsp;Editar</a>
                        <a asp-action="details" class="btn btn-info" asp-route-id="@item.ProgramaId"><i class="fas fa-info-circle"></i>&nbsp;Detalles</a>
                        <a asp-action="delete" class="btn btn-danger" asp-route-id="@item.ProgramaId"><i class="fas fa-trash-alt"></i>&nbsp;Eliminar</a>
                    </td>
                </tr>
            }


        }






    </tbody>
</table>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        //function sortTable(n) {
        //    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        //    table = document.getElementById("tabla");
        //    switching = true;
        //    //Set the sorting direction to ascending:
        //    dir = "asc";
        //    /*Make a loop that will continue until
        //    no switching has been done:*/
        //    while (switching) {
        //        //start by saying: no switching is done:
        //        switching = false;
        //        rows = table.rows;
        //        /*Loop through all table rows (except the
        //        first, which contains table headers):*/
        //        for (i = 1; i < (rows.length - 1); i++) {
        //            //start by saying there should be no switching:
        //            shouldSwitch = false;
        //            /*Get the two elements you want to compare,
        //            one from current row and one from the next:*/
        //            x = rows[i].getElementsByTagName("TD")[n];
        //            y = rows[i + 1].getElementsByTagName("TD")[n];
        //            /*check if the two rows should switch place,
        //            based on the direction, asc or desc:*/
        //            if (dir == "asc") {
        //                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
        //                    //if so, mark as a switch and break the loop:
        //                    shouldSwitch = true;
        //                    break;
        //                }
        //            } else if (dir == "desc") {
        //                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
        //                    //if so, mark as a switch and break the loop:
        //                    shouldSwitch = true;
        //                    break;
        //                }
        //            }
        //        }
        //        if (shouldSwitch) {
        //            /*If a switch has been marked, make the switch
        //            and mark that a switch has been done:*/
        //            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        //            switching = true;
        //            //Each time a switch is done, increase this count by 1:
        //            switchcount++;
        //        } else {
        //            /*If no switching has been done AND the direction is "asc",
        //            set the direction to "desc" and run the while loop again.*/
        //            if (switchcount == 0 && dir == "asc") {
        //                dir = "desc";
        //                switching = true;
        //            }
        //        }
        //    }
        //}
        $(document).ready(function () {
            $('#tabla').DataTable();
            //$('tr').removeClass("odd");
            //$('tr').removeClass("even");
            //$('table').removeClass("dataTable");
        });
    </script>
}

<script src="https://kit.fontawesome.com/eac556b4db.js" crossorigin="anonymous"></script>
