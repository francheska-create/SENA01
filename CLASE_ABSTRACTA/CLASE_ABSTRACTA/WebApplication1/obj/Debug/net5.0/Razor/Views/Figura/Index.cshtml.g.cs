#pragma checksum "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\Figura\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5058130227d9d99d8e07631245df521d21d3fc09"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Figura_Index), @"mvc.1.0.view", @"/Views/Figura/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\_ViewImports.cshtml"
using WebFiguras;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\_ViewImports.cshtml"
using WebFiguras.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5058130227d9d99d8e07631245df521d21d3fc09", @"/Views/Figura/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c415078df98eff39a8db2743e72f33a957c08b3e", @"/Views/_ViewImports.cshtml")]
    public class Views_Figura_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\Figura\Index.cshtml"
  
    ViewData["Title"] = "Calcular areas";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5058130227d9d99d8e07631245df521d21d3fc093881", async() => {
                WriteLiteral(@"



    <div class=""row"">
        <div class=""col-md-6 offset-md-3"">
            <div class=""card login-logout-tab"">
                <div class=""card-header"">

                    <ul class=""nav nav-tabs card-header-tabs justify-content-center"" style=""margin-left:00px;"">
                        <li class=""nav-item"">
                            <a class=""nav-link"" id=""aCuadrado"" href='#tab2'>Cuadrado</a>

                        </li>
                        <li class=""nav-item"">
                            <a class=""nav-link"" id=""aCircunferencia"" href='#tab1'>Circunferencia</a>

                        </li>
                    </ul>
                    <div class=""secciones"" style=""margin-top:14px;"">
                        <article id=""tab1"">
                            <div class=""col-md-10 offset-md-1"">
");
                WriteLiteral(@"                                <input id=""txtRadio"" type=""number"" class=""form-control "" placeholder=""Radio"" />
                                <br />
                                <input type=""button"" id=""btnAgregarcircunferencia"" value=""Agregar"" class=""btn btn-primary"" />
                                <br />
                                <br />
                            </div>
                        </article>
                        <article id=""tab2"">
                            <div class=""col-md-10 offset-md-1"">
");
                WriteLiteral(@"

                                <input id=""txtLado"" type=""number"" class=""form-control dark"" placeholder=""Lado"" />
                                <br />
                                <input type=""button"" id=""btnAgregarcuadrado"" value=""Agregar"" class=""btn btn-primary "" />
                                <br />
                                <br />
                            </div>
                        </article>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div>
        <div class=""row"">
            <div class=""col-md-6"">
                <label id=""lblContadorCU"">Cuadrados capturados en memoria</label>
                <input type=""text""");
                BeginWriteAttribute("value", " value=\"", 2416, "\"", 2424, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control"" readonly placeholder=""Cuadrados"" id=""txtContadorCU"" />
            </div>
            <br />
            <div class=""col-md-6"">
                <label id=""lblContadorCI"">Circunferencias capturadas en memoria</label>
                <input type=""text""");
                BeginWriteAttribute("value", " value=\"", 2702, "\"", 2710, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control"" readonly placeholder=""Circunferencias"" id=""txtContadorCI"" />
            </div>
        </div>
        <br />
        <br />
        <br />
        <table id=""tblFiguras"" class=""table table-striped"">
            <thead>
                <tr>
                    <th>Figura</th>
                    <th>Lado</th>
                    <th>Radio</th>
                    <th>Area</th>
                </tr>
            </thead>
            <tbody id=""tblFigurasCuerpo"">
            </tbody>
        </table>

    </div>
    <br />
    <br />
    <div class=""row"">
        <div class=""d-flex justify-content-around"">


            <input type=""button"" id=""btnDatos"" value=""Datos de las figuras Seleccionadas"" class=""btn btn-primary"" />

            <input type=""button"" id=""btnDatosf"" value="" Datos de todas las figuras"" class=""btn btn-primary"" />

            <input type=""button"" id=""btnSumaDatos"" value=""Calcular Areas"" class=""btn btn-primary"" />

            <input type=""");
                WriteLiteral("button\" id=\"btnLimpiar\" value=\"Limpiar datos \" class=\"btn btn-danger\" />\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n");
#nullable restore
#line 107 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\Figura\Index.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial"); 

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
    <script type=""text/javascript"">
        //Control de las pesta√±as para cuadrado o circunferencia
        $('aCuadrado').addClass('active');
        $('.secciones article').hide();
        $('.secciones article:first').show();
        $('ul li a').click(function () {
            $('ul li a').removeClass('active');
            $(this).addClass('active');
            $('.secciones article').hide();

            var activeTab = $(this).attr('href');
            $(activeTab).show();
            return false;
        });


        let dataCI = [];
        let dataCU = [];
        var contadorDatosCI = 0;
        var contadorDatosCU = 0;
        let tipo = 1;
        $(function () {
            $(""#btnAgregarcircunferencia"").click(function (e) {
            //Circunferencia
                if ($(""#txtRadio"").val().trim() == """") {
                    alert(""¬°Debe digitar un valor!"");

                    return false;
                    e.preventDefault();
                }
      ");
                WriteLiteral(@"          else {

                    dataCI = [...dataCI, $(""#txtRadio"").val().trim()];
                    contadorDatosCI = contadorDatosCI + 1;
                    document.getElementById(""txtContadorCI"").value = contadorDatosCI;
                }
            });

            $(""#btnAgregarcuadrado"").click(function (e) {
                //Cuadrado
                if ($(""#txtLado"").val().trim() == """") {
                    alert(""¬°Debe digitar un valor!"");

                    return false;
                    e.preventDefault();
                }
                else {

                    dataCU = [...dataCU, $(""#txtLado"").val().trim()];
                    contadorDatosCU = contadorDatosCU + 1;
                    document.getElementById(""txtContadorCU"").value = contadorDatosCU;
                }
            });

            $(""#btnDatosf"").click(function (e) {
                cargarTablaCompleta();
            });

            $(""#btnDatos"").click(function (e) {
           ");
                WriteLiteral(@"     cargarTablaIndividual();
            });

            $(""#aCuadrado"").click(function (e) {
                tipo = 1;
            });
            $(""#aCircunferencia"").click(function (e) {
                tipo = 2;
            });

            $(""#btnSumaDatos"").click(function (e) {
                cargarTablaIndividual('a');

            });
            $(""#btnLimpiar"").click(function (e) {
                location.reload();

            });

            function cargarTablaIndividual(a1) {

                $(""#tblFigurasCuerpo"").html('');
                if (tipo == 1) {
                    var contendor = $(""#tblFigurasCuerpo"").html();
                    var nuevaFila = '<tr>';

                    for (let value of dataCU) {
                        let valor = '0';
                        if (a1 != null) {

                            var url = """);
#nullable restore
#line 198 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\Figura\Index.cshtml"
                                  Write(Url.Action("CalcularLado", "Figura"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""";


                            var parametros = { lado: value };
                            $.get(url, parametros).done(function (resultado) {
                                valor = resultado;
                                nuevaFila = nuevaFila + '<td>Cuadrado</td>';
                                nuevaFila += '<td>' + value + '</td>';
                                nuevaFila += '<td>No aplica</td>';
                                nuevaFila += '<td>' + valor + '</td>';
                                nuevaFila += '</tr>';
                                contendor = $(""#tblFigurasCuerpo"").html();
                                $(""#tblFigurasCuerpo"").html(contendor + nuevaFila);
                                nuevaFila = '<tr>';
                            });
                        }
                        else {
                            nuevaFila = nuevaFila + '<td>Cuadrado</td>';
                            nuevaFila += '<td>' + value + '</td>';
                            ");
                WriteLiteral(@"nuevaFila += '<td>No aplica</td>';
                            nuevaFila += '<td>N/A</td>';
                            nuevaFila += '</tr>';
                            contendor = $(""#tblFigurasCuerpo"").html();
                            $(""#tblFigurasCuerpo"").html(contendor + nuevaFila);
                            nuevaFila = '<tr>';
                        }

                    }
                }
                else if (tipo == 2) {


                    var contendor1 = $(""#tblFigurasCuerpo"").html();
                    var nuevaFila1 = '<tr>';
                    for (let value of dataCI) {
                        var valor = '0';
                        if (a1 != null) {

                            var url = """);
#nullable restore
#line 236 "C:\Users\jlap1\OneDrive\Documentos\GitHub\sena.net\CLASE_ABSTRACTA\WebApplication1\Views\Figura\Index.cshtml"
                                  Write(Url.Action("CalcularRadio", "Figura"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""";


                            var parametros = { radio: value };
                            $.get(url, parametros).done(function (resultado) {

                                valor = resultado;
                                nuevaFila1 = nuevaFila1 + '<td>Circunferencia</td>';
                                nuevaFila1 += '<td>No aplica</td>';
                                nuevaFila1 += '<td>' + value + '</td>';
                                nuevaFila1 += '<td>' + valor + '</td>';
                                nuevaFila1 += '</tr>';
                                contendor1 = $(""#tblFigurasCuerpo"").html();
                                $(""#tblFigurasCuerpo"").html(contendor1 + nuevaFila1);
                                nuevaFila1 = '<tr>';

                            });

                        }
                        else {
                            nuevaFila1 = nuevaFila1 + '<td>Circunferencia</td>';
                            nuevaFila1 += '<td>No aplica</td>';
");
                WriteLiteral(@"                            nuevaFila1 += '<td>' + value + '</td>';
                            nuevaFila1 += '<td>N/A</td>';
                            nuevaFila1 += '</tr>';
                            contendor1 = $(""#tblFigurasCuerpo"").html();
                            $(""#tblFigurasCuerpo"").html(contendor1 + nuevaFila1);
                            nuevaFila1 = '<tr>';
                        }


                    }
                }
            }

            function cargarTablaCompleta() {
                $(""#tblFigurasCuerpo"").html('');
                var contendor = $(""#tblFigurasCuerpo"").html();
                var nuevaFila = '<tr>';
                for (let value of dataCU) {
                    nuevaFila = nuevaFila + '<td>Cuadrado</td>';
                    nuevaFila += '<td>' + value + '</td>';
                    nuevaFila += '<td>No aplica</td>';
                    nuevaFila += '<td>0</td>';
                    nuevaFila += '</tr>';
                    contendor");
                WriteLiteral(@" = $(""#tblFigurasCuerpo"").html();
                    $(""#tblFigurasCuerpo"").html(contendor + nuevaFila);
                    nuevaFila = '<tr>';
                }

                var contendor1 = $(""#tblFigurasCuerpo"").html();
                var nuevaFila1 = '<tr>';
                for (let value of dataCI) {
                    nuevaFila1 = nuevaFila1 + '<td>Circunferencia</td>';
                    nuevaFila1 += '<td>No aplica</td>';
                    nuevaFila1 += '<td>' + value + '</td>';
                    nuevaFila1 += '<td>0</td>';
                    nuevaFila1 += '</tr>';
                    contendor1 = $(""#tblFigurasCuerpo"").html();
                    $(""#tblFigurasCuerpo"").html(contendor1 + nuevaFila1);
                    nuevaFila1 = '<tr>';
                }
            }
        });
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
